
sed -i 's/cn.archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list
apt updates
apt upgrade
timedatectl  #检查时区
hostnamectl  set-hostname  #设置hostname
vi /etc/netplan/01-network-manager-all.yaml   #更改IP 地址
netplan  apply    #应用此ip 
apt install chrony lrzsz # 安装时间同步
echot "server ntp1.aliyun.com ibrust " >> /etc/chrony/chrony.conf  #设置NTP 服务器
chronyc tracking  #手动同步

systemctl stop ufw  #关闭防火墙服务
systemctl  disable ufw
ufw  status   
cat << EOF >> /etc/hosts
192.168.110.30 master
192.168.110.31 node-1
192.168.110.32 node-2
192.168.110.33 node-3
EOF


1   安装DOCKER 准备
swapoff -a  #关闭swap

modprobe br_netfilter

cat << EOF > /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
vm.swappiness=0
EOF

sysctl -p /etc/sysctl.d/k8s.conf 

cat > /etc/modules-load.d/br_netfilter.conf << EOF
br_netfilter
EOF

systemctl enable --now systemd-modules-load.service
验证模块是否加载成功
lsmod |egrep "br_netfilter"


apt-get -y install apt-transport-https ca-certificates curl software-properties-common  
curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -  #安装key文件
add-apt-repository "deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"  #指定sources
apt update
apt install containerd.io

cat << EOF > /etc/crictl.yaml 
runtime-endpoint: unix:///run/containerd/containerd.sock
image-endpoint: unix:///run/containerd/containerd.sock
timeout: 10
debug: false
EOF

cat /etc/containerd/config.toml
#增加国了镜像
      [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
          endpoint = ["https://"https://9npjh5s8.mirror.aliyuncs.com", "https://registry.docker-cn.com"]

        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."registry.k8s.io"]
          endpoint = ["https://registry.aliyuncs.com/google_containers"]

        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."registry.magedu.com"]
          endpoint = ["https://registry.magedu.com"]

systemctl stop  containerd
systemctl start  containerd
systemctl enable containerd
systemctl status containerd

ctr  image list     # 容器命令
ctr  image  list  -q  #简略list
ctr -n  k8s.io   image  list     # namespace k8s.io     命名空间选项


kubernetes  安装

curl -fsSL https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.29/deb/Release.key |
    gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.29/deb/ /" |
    tee /etc/apt/sources.list.d/kubernetes.list

apt  policy  kubeadm  #查看所有可安装的版本
apt install kubeadm=1.29.1-1.1  kubectl=1.29.1-1.1  kubelet=1.29.1-1.1
systemctl  start  kubelet
systemctl  enable  kubelet

kubeadm  config print  init-defaults > kubeadm_init.yaml
vi  kubeadmin_init.yaml
    nodeRegistration:
    localAPIEndpoint:
    advertiseAddress: 192.168.110.40   #api  server  ip
    bindPort: 6443
    nodeRegistration:
    criSocket: unix:///var/run/containerd/containerd.sock
    imagePullPolicy: IfNotPresent
    name: master      # hostname
    taints: null

  localAPIEndpoint:
     advertiseAddress: 192.168.110.40    #指定api server ip
  imageRepository: registry.aliyuncs.com/google_containers     #指定镜像源

kubeadm  config  images list  --config  kubeadm_init.yaml  #显示镜像
kubeadm  config images pull  --config   kubeadm_init.yaml   #下载镜像
cat  calico.yaml | grep  image      #查看镜像
ctr -n  k8s.io  image    pull   XXXx:XX                       #手动下载镜像  ctr 
crictl  pull    image listed                  #k8s  容器命令

部署 kuberentes                  
kubeadm init --upload-certs  --config kubeadm_ini.yaml  | tee kubeadm_init.log  
  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

部署网络插件
kubectl  apply -f calico.yaml
加入节点
kubeadm join 192.168.110.40:6443 --token abcdef.0123456789abcdef \
	--discovery-token-ca-cert-hash sha256:471548930329d7da90f433d43a8913970cd961e16929049079c4d7f3e30178a5 
删除节点
 kubeadm  reset
 rm  -rf /etc/kubernetns

kubectl get node
kubectl get pod --all-namespaces
kubectl get pods --all-namespace -o wide
kubectl cluster-info


